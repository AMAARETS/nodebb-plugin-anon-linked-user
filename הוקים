==== filter:post.create = data

 {
  post: {
    pid: 54,
    uid: 1,
    tid: 8,
    content: '[]�������',
    sourceContent: undefined,
    timestamp: 1751532218903
  },
  data: {
    uuid: '82d2df82-67e5-4083-8c53-c1e999b5248f',
    handle: '',
    title: "'������",
    content: '[]�������',
    thumb: '',
    cid: 1,
    tags: [],
    timestamp: 1751532218903,
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'POST',
      body: [Object],
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/category/1/announcements',
      path: '/category/1/announcements',
      baseUrl: '/api/v3/topics',
      originalUrl: '/api/v3/topics',
      headers: [Object]
    },
    fromQueue: false,
    tid: 8,
    ip: '127.0.0.1',
    isMain: true
  },
  caller: {
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'POST',
      body: [Object],
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/category/1/announcements',
      path: '/category/1/announcements',
      baseUrl: '',
      originalUrl: '/api/v3/topics',
      headers: [Object]
    }
  }
}


==== hooks.on('action:composer.submit', function (data) { = �� ����

{
    "composerEl": {
        "0": {
            "jQuery37105972654509185916": {
                "parentNode": [
                    903,
                    109,
                    true
                ]
            }
        },
        "length": 1,
        "prevObject": {
            "0": {
                "location": {
                    "ancestorOrigins": {},
                    "href": "http://localhost:4567/topic/10/%D7%A4%D7%9D%D7%9F%D7%98%D7%92%D7%93%D7%A9/4?_=1751533319414",
                    "origin": "http://localhost:4567",
                    "protocol": "http:",
                    "host": "localhost:4567",
                    "hostname": "localhost",
                    "port": "4567",
                    "pathname": "/topic/10/%D7%A4%D7%9D%D7%9F%D7%98%D7%92%D7%93%D7%A9/4",
                    "search": "?_=1751533319414",
                    "hash": ""
                },
                "uidEvent": 1,
                "jQuery371059726545091859161": {
                    "events": {
                        "mouseup": [
                            {
                                "type": "mouseup",
                                "origType": "mouseup",
                                "guid": 22,
                                "namespace": ""
                            },
                            {
                                "type": "mouseup",
                                "origType": "mouseup",
                                "guid": 143,
                                "namespace": ""
                            },
                            {
                                "type": "mouseup",
                                "origType": "mouseup",
                                "guid": 164,
                                "namespace": ""
                            }
                        ],
                        "selectionchange": [
                            {
                                "type": "selectionchange",
                                "origType": "selectionchange",
                                "guid": 77,
                                "namespace": ""
                            },
                            {
                                "type": "selectionchange",
                                "origType": "selectionchange",
                                "guid": 78,
                                "namespace": ""
                            }
                        ],
                        "dragend,": [
                            {
                                "type": "dragend,",
                                "origType": "dragend,",
                                "guid": 143,
                                "namespace": ""
                            },
                            {
                                "type": "dragend,",
                                "origType": "dragend,",
                                "guid": 164,
                                "namespace": ""
                            }
                        ],
                        "dragstart": [
                            {
                                "type": "dragstart",
                                "origType": "dragstart",
                                "guid": 163,
                                "namespace": ""
                            }
                        ]
                    },
                    "focusout": 4
                }
            },
            "length": 1
        }
    },
    "action": "posts.reply",
    "composerData": {
        "uuid": "b7fc9458-89c6-43de-8742-6987070ad423",
        "tid": "10",
        "handle": "",
        "content": ",,���������",
        "toPid": null
    },
    "postData": {
        "save_id": "composer:1:1751534920860",
        "action": "posts.reply",
        "tid": "10",
        "toPid": null,
        "title": "�������",
        "body": "",
        "modified": true,
        "isMain": false,
        "category": null,
        "mobile": false,
        "submitted": true
    },
    "redirect": true
}


==={ "hook": "action:user.set"
  ]
}
data: {
  uid: 43,
  field: 'lastonline',
  value: 1752142881950,
  type: 'set',
  caller: {
    uid: 43,
    req: {
      uid: 43,
      params: {},
      method: 'GET',
      body: undefined,
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/topic/3/%D7%9A%D7%9C%D7%97%D7%9A%D7%9A',
      path: '/topic/3/%D7%9A%D7%9C%D7%97%D7%9A%D7%9A',
      baseUrl: '',
      originalUrl: '/topic/3/%D7%9A%D7%9C%D7%97%D7%9A%D7%9A',
      headers: [Object]
    }
  }
}
data: {
  uid: 2,
  field: 'reputation',
  value: 4,
  type: 'increment',
  caller: {
    uid: 43,
    req: {
      uid: 43,
      params: {},
      method: 'PUT',
      body: [Object],
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/topic/3/%D7%9A%D7%9C%D7%97%D7%9A%D7%9A/3',
      path: '/topic/3/%D7%9A%D7%9C%D7%97%D7%9A%D7%9A/3',
      baseUrl: '',
      originalUrl: '/api/v3/posts/36/vote',
      headers: [Object]
    }
  }
}
data: {
  uid: '43',
  field: 'groupTitle',
  value: '["אורחים"]',
  type: 'set',
  caller: {
    uid: 43,
    req: {
      uid: 43,
      params: {},
      method: 'PUT',
      body: undefined,
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/groups/%D7%90%D7%95%D7%A8%D7%97%D7%99%D7%9D',
      path: '/groups/%D7%90%D7%95%D7%A8%D7%97%D7%99%D7%9D',
      baseUrl: '',
      originalUrl: '/api/v3/groups/%D7%90%D7%95%D7%A8%D7%97%D7%99%D7%9D/membership/43',
      headers: [Object]
    }
  }
}

data: {
  uid: '30',
  field: 'banned',
  value: 1,
  type: 'set',
  caller: {
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'PUT',
      body: [Object],
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/user/%D7%AA%D7%AA%D7%AA',
      path: '/user/%D7%AA%D7%AA%D7%AA',
      baseUrl: '',
      originalUrl: '/api/v3/users/30/ban',
      headers: [Object]
    }
  }
}
data: {
  uid: '30',
  field: 'banned:expire',
  value: 1752165597584,
  type: 'set',
  caller: {
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'PUT',
      body: [Object],
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/user/%D7%AA%D7%AA%D7%AA',
      path: '/user/%D7%AA%D7%AA%D7%AA',
      baseUrl: '',
      originalUrl: '/api/v3/users/30/ban',
      headers: [Object]
    }
  }
}


=== action:group.join

data: {
  groupNames: [ 'אורחים' ],
  uid: '43',
  caller: {
    uid: 43,
    req: {
      uid: 43,
      params: {},
      method: 'PUT',
      body: undefined,
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/groups/%D7%90%D7%95%D7%A8%D7%97%D7%99%D7%9D',
      path: '/groups/%D7%90%D7%95%D7%A8%D7%97%D7%99%D7%9D',
      baseUrl: '',
      originalUrl: '/api/v3/groups/%D7%90%D7%95%D7%A8%D7%97%D7%99%D7%9D/membership/43',
      headers: [Object]
    }
  }
}


=== action:user.saveSettings

data: {
  uid: 38,
  settings: {
    postsPerPage: '20',
    topicsPerPage: '20',
    userLang: 'he',
    acpLang: 'he',
    bootswatchSkin: '',
    categoryTopicSort: 'recently_replied',
    categoryWatchState: 'tracking',
    chatAllowList: '[]',
    chatDenyList: '[]',
    dailyDigestFreq: 'off',
    disableIncomingChats: 0,
    followTopicsOnCreate: 0,
    followTopicsOnReply: 0,
    homePageRoute: 'custom',
    openOutgoingLinksInNewTab: 0,
    openSidebars: 'off',
    scrollToMyPost: 1,
    showemail: 0,
    showfullname: 0,
    topicPostSort: 'oldest_to_newest',
    topicSearchEnabled: 0,
    updateUrlWithPostIndex: 1,
    upvoteNotifFreq: 'all',
    usePagination: 0,
    homePageCustom: '',
    notificationType_upvote: 'email',
    'notificationType_new-topic': 'notification',
    'notificationType_new-topic-with-tag': 'notification',
    'notificationType_new-topic-in-category': 'notification',
    'notificationType_new-reply': 'notification',
    'notificationType_post-edit': 'notification',
    notificationType_follow: 'notification',
    'notificationType_new-chat': 'notification',
    'notificationType_new-group-chat': 'notification',
    'notificationType_new-public-chat': 'none',
    'notificationType_group-invite': 'notification',
    'notificationType_group-leave': 'notification',
    'notificationType_group-request-membership': 'notification',
    'notificationType_new-reward': 'none',
    notificationType_mention: 'notification'
  },
  caller: {
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'PUT',
      body: [Object],
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/user/%D7%A2%D7%A1%D7%A7-%D7%91%D7%A2-%D7%9E/settings',
      path: '/user/%D7%A2%D7%A1%D7%A7-%D7%91%D7%A2-%D7%9E/settings',
      baseUrl: '',
      originalUrl: '/api/v3/users/37/settings',
      headers: [Object]
    }
  }
}





data: {
  req: <ref *1> IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: undefined,
      readable: undefined
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 1315596
    },
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [ServerResponse],
      Symbol(async_id_symbol): 5299,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): null,
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      'localhost:4567',
      'Connection',
      'keep-alive',
      'Cache-Control',
      'max-age=0',
      'sec-ch-ua-platform',
      '"Windows"',
      'User-Agent',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      'Accept',
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-ch-ua',
      '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
      'Upgrade-Insecure-Requests',
      '1',
      'sec-ch-ua-mobile',
      '?0',
      'Sec-Fetch-Site',
      'same-origin',
      'Sec-Fetch-Mode',
      'navigate',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:4567/user/%D7%A4%D7%A8%D7%95%D7%A4%D7%99%D7%9C-%D7%90%D7%99%D7%A9%D7%99/settings',
      'Accept-Encoding',
      'gzip, deflate, br, zstd',
      'Accept-Language',
      'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
      'Cookie',
      'express.sid=s%3AmPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5.kGC%2B%2FZOijacyOV3gL%2FpkXTZeW0%2BHYiVLBtRb%2BZe%2BeCk',
      'If-None-Match',
      'W/"28db6-AwjUIArTjFlJh2hMC5S+CaBFB1w"'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/recent',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [ServerResponse],
      Symbol(async_id_symbol): 5299,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): null,
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    _consuming: false,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/recent',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/recent',
      path: '/recent',
      href: '/recent',
      _raw: '/recent'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype],
      writeHead: [Function: writeHead],
      end: [Function: end],
      render: [AsyncFunction: renderOverride],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Socket],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 16384,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    flash: [Function: _flash],
    body: undefined,
    secret: '62363102-7510-4f6f-b5ab-6e09c51a10a5',
    cookies: {},
    signedCookies: [Object: null prototype] {
      'express.sid': 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5'
    },
    useragent: {
      isYaBrowser: false,
      isAuthoritative: true,
      isMobile: false,
      isMobileNative: false,
      isTablet: false,
      isiPad: false,
      isiPod: false,
      isiPhone: false,
      isiPhoneNative: false,
      isAndroid: false,
      isAndroidNative: false,
      isBlackberry: false,
      isOpera: false,
      isIE: false,
      isEdge: false,
      isIECompatibilityMode: false,
      isSafari: false,
      isFirefox: false,
      isWebkit: false,
      isChrome: true,
      isKonqueror: false,
      isOmniWeb: false,
      isSeaMonkey: false,
      isFlock: false,
      isAmaya: false,
      isPhantomJS: false,
      isEpiphany: false,
      isDesktop: true,
      isWindows: true,
      isLinux: false,
      isLinux64: false,
      isMac: false,
      isChromeOS: false,
      isBada: false,
      isSamsung: false,
      isRaspberry: false,
      isBot: false,
      isCurl: false,
      isAndroidTablet: false,
      isWinJs: false,
      isKindleFire: false,
      isSilk: false,
      isCaptive: false,
      isSmartTV: false,
      isUC: false,
      isFacebook: false,
      isAlamoFire: false,
      isElectron: false,
      silkAccelerated: false,
      browser: 'Chrome',
      version: '138.0.0.0',
      os: 'Windows 10.0',
      platform: 'Microsoft Windows',
      geoIp: {},
      source: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      isWechat: false
    },
    isSpider: [Function: bound isSpider],
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/recent',
      path: '/recent',
      href: '/recent',
      _raw: '/recent'
    },
    sessionStore: MongoStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      crypto: null,
      transformFunctions: [Object],
      clientP: [Promise],
      options: [Object],
      collectionP: [Promise],
      generate: [Function (anonymous)],
      Symbol(shapeMode): false,
      Symbol(kCapture): false
    },
    sessionID: 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5',
    session: Session {
      cookie: [Object],
      csrfToken: '09ccdb72fa94be151d2e96bcebc93d67ee697645d6e3aba0dfee30df7442957a636b99824700705895e36334b0707efffffc3f08513b29195b0d5e25594adfcc',
      flash: {},
      passport: [Object],
      meta: [Object],
      tids_viewed: [Object],
      uids_viewed: [Object]
    },
    logIn: [Function (anonymous)],
    login: [Function (anonymous)],
    logOut: [Function (anonymous)],
    logout: [Function (anonymous)],
    isAuthenticated: [Function (anonymous)],
    isUnauthenticated: [Function (anonymous)],
    _sessionManager: SessionManager {
      _key: 'passport',
      _serializeUser: [Function: bound ]
    },
    _passport: { instance: [Authenticator] },
    user: { uid: 1 },
    loggedIn: true,
    uid: 1,
    route: Route { path: '/recent', stack: [Array], methods: [Object] },
    csrfToken: [Function (anonymous)],
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kHeaders): {
      host: 'localhost:4567',
      connection: 'keep-alive',
      'cache-control': 'max-age=0',
      'sec-ch-ua-platform': '"Windows"',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
      'upgrade-insecure-requests': '1',
      'sec-ch-ua-mobile': '?0',
      'sec-fetch-site': 'same-origin',
      'sec-fetch-mode': 'navigate',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:4567/user/%D7%A4%D7%A8%D7%95%D7%A4%D7%99%D7%9C-%D7%90%D7%99%D7%A9%D7%99/settings',
      'accept-encoding': 'gzip, deflate, br, zstd',
      'accept-language': 'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
      cookie: 'express.sid=s%3AmPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5.kGC%2B%2FZOijacyOV3gL%2FpkXTZeW0%2BHYiVLBtRb%2BZe%2BeCk',
      'if-none-match': 'W/"28db6-AwjUIArTjFlJh2hMC5S+CaBFB1w"'
    },
    Symbol(kHeadersCount): 34,
    Symbol(kTrailers): null,
    Symbol(kTrailersCount): 0
  },
  res: <ref *2> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: <ref *1> IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/recent',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/recent',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *2],
      flash: [Function: _flash],
      body: undefined,
      secret: '62363102-7510-4f6f-b5ab-6e09c51a10a5',
      cookies: {},
      signedCookies: [Object: null prototype],
      useragent: [Object],
      isSpider: [Function: bound isSpider],
      _parsedOriginalUrl: [Url],
      sessionStore: [MongoStore],
      sessionID: 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5',
      session: [Session],
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _sessionManager: [SessionManager],
      _passport: [Object],
      user: [Object],
      loggedIn: true,
      uid: 1,
      route: [Route],
      csrfToken: [Function (anonymous)],
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kHeaders): [Object],
      Symbol(kHeadersCount): 34,
      Symbol(kTrailers): null,
      Symbol(kTrailersCount): 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {
      useragent: [Object],
      renderHeader: true,
      isAPI: false,
      config: [Object],
      linkTags: [Array],
      template: 'recent'
    },
    writeHead: [Function: writeHead],
    end: [Function: end],
    render: [AsyncFunction: renderOverride],
    Symbol(shapeMode): false,
    Symbol(kCapture): false,
    Symbol(kBytesWritten): 0,
    Symbol(kNeedDrain): false,
    Symbol(corked): 0,
    Symbol(kChunkedBuffer): [],
    Symbol(kChunkedLength): 0,
    Symbol(kSocket): Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [Circular *2],
      Symbol(async_id_symbol): 5299,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): null,
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    Symbol(kOutHeaders): [Object: null prototype] {
      'cross-origin-opener-policy': [Array],
      'cross-origin-resource-policy': [Array],
      'origin-agent-cluster': [Array],
      'referrer-policy': [Array],
      'strict-transport-security': [Array],
      'x-content-type-options': [Array],
      'x-dns-prefetch-control': [Array],
      'x-download-options': [Array],
      'x-frame-options': [Array],
      'x-permitted-cross-domain-policies': [Array],
      'x-xss-protection': [Array],
      'x-powered-by': [Array],
      'content-security-policy': [Array],
      'x-upstream-hostname': [Array],
      'cache-control': [Array]
    },
    Symbol(errored): null,
    Symbol(kHighWaterMark): 16384,
    Symbol(kRejectNonStandardBodyWrites): false,
    Symbol(kUniqueHeaders): null
  },
  templateValues: {
    title: 'NodeBB',
    'title:url': '',
    description: '',
    'cache-buster': 'v=0d9950f9a57',
    'brand:logo': '',
    'brand:logo:url': '',
    'brand:logo:alt': '',
    'brand:logo:display': 'hide',
    allowRegistration: true,
    searchEnabled: true,
    postQueueEnabled: false,
    registrationQueueEnabled: false,
    config: {
      relative_path: '',
      upload_url: '/assets/uploads',
      asset_base_url: '/assets',
      assetBaseUrl: '/assets',
      siteTitle: 'NodeBB',
      browserTitle: 'NodeBB',
      description: '',
      keywords: '',
      'brand:logo': '',
      titleLayout: '&#123;pageTitle&#125; | &#123;browserTitle&#125;',
      showSiteTitle: true,
      maintenanceMode: false,
      postQueue: 0,
      minimumTitleLength: 3,
      maximumTitleLength: 255,
      minimumPostLength: 8,
      maximumPostLength: 32767,
      minimumTagsPerTopic: 0,
      maximumTagsPerTopic: 5,
      minimumTagLength: 3,
      maximumTagLength: 15,
      undoTimeout: 10000,
      useOutgoingLinksPage: false,
      outgoingLinksWhitelist: undefined,
      allowGuestHandles: false,
      allowTopicsThumbnail: true,
      usePagination: false,
      disableChat: false,
      disableChatMessageEditing: false,
      maximumChatMessageLength: 1000,
      socketioTransports: [Array],
      socketioOrigins: 'http://localhost:*',
      websocketAddress: '',
      maxReconnectionAttempts: 5,
      reconnectionDelay: 1500,
      topicsPerPage: 20,
      postsPerPage: 20,
      maximumFileSize: 2048,
      'theme:id': 'nodebb-theme-harmony',
      'theme:src': '',
      defaultLang: 'he',
      userLang: 'he',
      loggedIn: true,
      uid: 1,
      'cache-buster': 'v=0d9950f9a57',
      topicPostSort: 'oldest_to_newest',
      categoryTopicSort: 'recently_replied',
      csrf_token: '09ccdb72fa94be151d2e96bcebc93d67ee697645d6e3aba0dfee30df7442957a636b99824700705895e36334b0707efffffc3f08513b29195b0d5e25594adfcc',
      searchEnabled: true,
      searchDefaultInQuick: 'titles',
      bootswatchSkin: '',
      'composer:showHelpTab': true,
      enablePostHistory: true,
      timeagoCutoff: 30,
      timeagoCodes: [Array],
      cookies: [Object],
      thumbs: [Object],
      emailPrompt: 0,
      useragent: [Object],
      fontawesome: [Object],
      activitypub: [Object],
      acpLang: 'he',
      openOutgoingLinksInNewTab: false,
      topicSearchEnabled: false,
      disableCustomUserSkins: false,
      defaultBootswatchSkin: '',
      'composer-default': {},
      theme: [Object],
      openDraftsOnPageLoad: false,
      markdown: [Object],
      emojiCustomFirst: false,
      '2factor': [Object]
    },
    relative_path: '',
    bodyClass: 'page-recent template-recent page-status-200 theme-harmony user-loggedin',
    widgets: { 'sidebar-footer': [Array] },
    configJSON: '{"relative_path":"","upload_url":"/assets/uploads","asset_base_url":"/assets","assetBaseUrl":"/assets","siteTitle":"NodeBB","browserTitle":"NodeBB","description":"","keywords":"","brand:logo":"","titleLayout":"&#123;pageTitle&#125; | &#123;browserTitle&#125;","showSiteTitle":true,"maintenanceMode":false,"postQueue":0,"minimumTitleLength":3,"maximumTitleLength":255,"minimumPostLength":8,"maximumPostLength":32767,"minimumTagsPerTopic":0,"maximumTagsPerTopic":5,"minimumTagLength":3,"maximumTagLength":15,"undoTimeout":10000,"useOutgoingLinksPage":false,"allowGuestHandles":false,"allowTopicsThumbnail":true,"usePagination":false,"disableChat":false,"disableChatMessageEditing":false,"maximumChatMessageLength":1000,"socketioTransports":["polling","websocket"],"socketioOrigins":"http://localhost:*","websocketAddress":"","maxReconnectionAttempts":5,"reconnectionDelay":1500,"topicsPerPage":20,"postsPerPage":20,"maximumFileSize":2048,"theme:id":"nodebb-theme-harmony","theme:src":"","defaultLang":"he","userLang":"he","loggedIn":true,"uid":1,"cache-buster":"v=0d9950f9a57","topicPostSort":"oldest_to_newest","categoryTopicSort":"recently_replied","csrf_token":"09ccdb72fa94be151d2e96bcebc93d67ee697645d6e3aba0dfee30df7442957a636b99824700705895e36334b0707efffffc3f08513b29195b0d5e25594adfcc","searchEnabled":true,"searchDefaultInQuick":"titles","bootswatchSkin":"","composer:showHelpTab":true,"enablePostHistory":true,"timeagoCutoff":30,"timeagoCodes":["af","am","ar","az-short","az","be","bg","bs","ca","cs","cy","da","de-short","de","dv","el","en-short","en","es-short","es","et","eu","fa-short","fa","fi","fr-short","fr","gl","he","hr","hu","hy","id","is","it-short","it","ja","jv","ko","ky","lt","lv","mk","nl","no","pl","pt-br-short","pt-br","pt-short","pt","ro","rs","ru","rw","si","sk","sl","sq","sr","sv","th","tr-short","tr","uk","ur","uz","vi","zh-CN","zh-TW"],"cookies":{"enabled":false,"message":"&lsqb;&lsqb;global:cookies.message&rsqb;&rsqb;","dismiss":"&lsqb;&lsqb;global:cookies.accept&rsqb;&rsqb;","link":"&lsqb;&lsqb;global:cookies.learn-more&rsqb;&rsqb;","link_url":"https:&#x2F;&#x2F;www.cookiesandyou.com"},"thumbs":{"size":512},"emailPrompt":0,"useragent":{"isSafari":false},"fontawesome":{"pro":false,"styles":["solid","brands","regular"],"version":"6.7.2"},"activitypub":{"probe":1},"acpLang":"he","openOutgoingLinksInNewTab":false,"topicSearchEnabled":false,"disableCustomUserSkins":false,"defaultBootswatchSkin":"","composer-default":{},"theme":{"enableQuickReply":true,"enableBreadcrumbs":true,"centerHeaderElements":false,"mobileTopicTeasers":false,"stickyToolbar":true,"topicSidebarTools":true,"topMobilebar":false,"autohideBottombar":true,"openSidebars":false,"chatModals":false},"openDraftsOnPageLoad":false,"markdown":{"highlight":1,"highlightLinesLanguageList":"[]","hljsLanguages":["common"],"theme":"default.css","defaultHighlightLanguage":"","externalMark":false},"emojiCustomFirst":false,"2factor":{"hasKey":false}}',
    bootswatchSkin: '',
    browserTitle: 'נושאים אחרונים | NodeBB',
    navigation: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object]
    ],
    unreadCount: {
      topic: 0,
      newTopic: 0,
      watchedTopic: 0,
      unrepliedTopic: 0,
      mobileUnread: 0,
      unreadUrl: '/unread',
      chat: 0,
      notification: 0,
      flags: 0
    },
    isAdmin: true,
    isGlobalMod: false,
    showModMenu: true,
    canChat: true,
    user: {
      uid: 1,
      username: 'ראובן',
      userslug: 'ראובן',
      email: 'R.GOLDMAN7983@gmail.com',
      'email:confirmed': true,
      joindate: 1744276269234,
      lastonline: 1752508014974,
      picture: '',
      'icon:bgColor': '#2196f3',
      fullname: null,
      birthday: null,
      aboutme: null,
      signature: null,
      uploadedpicture: null,
      profileviews: 1,
      reputation: 12,
      postcount: 35,
      topiccount: 11,
      lastposttime: 1751977471449,
      banned: false,
      'banned:expire': 0,
      status: 'online',
      flags: null,
      followerCount: 0,
      followingCount: 0,
      'cover:url': null,
      'cover:position': null,
      groupTitle: '["administrators"]',
      mutedUntil: 0,
      mutedReason: null,
      typeProfile: null,
      isAnon: null,
      uidR: null,
      uidA: null,
      anonIsin: true,
      anonDefault: null,
      displayname: 'ראובן',
      groupTitleArray: [Array],
      'icon:text': 'ר',
      joindateISO: '2025-04-10T09:11:09.234Z',
      lastonlineISO: '2025-07-14T15:46:54.974Z',
      muted: false,
      banned_until: 0,
      banned_until_readable: 'Not Banned',
      isLocal: true,
      unreadData: [Object],
      isAdmin: true,
      isGlobalMod: false,
      isMod: false,
      privileges: [Object],
      blocks: [],
      timeagoCode: 'he',
      online: true,
      lastRoomId: null,
      isEmailConfirmSent: false
    },
    userJSON: '{"uid":1,"username":"\\u05E8\\u05D0\\u05D5\\u05D1\\u05DF","userslug":"\\u05E8\\u05D0\\u05D5\\u05D1\\u05DF","email":"R.GOLDMAN7983@gmail.com","email:confirmed":true,"joindate":1744276269234,"lastonline":1752508014974,"picture":"","icon:bgColor":"#2196f3","fullname":null,"birthday":null,"aboutme":null,"signature":null,"uploadedpicture":null,"profileviews":1,"reputation":12,"postcount":35,"topiccount":11,"lastposttime":1751977471449,"banned":false,"banned:expire":0,"status":"online","flags":null,"followerCount":0,"followingCount":0,"cover:url":null,"cover:position":null,"groupTitle":"[\\\\"administrators\\\\"]","mutedUntil":0,"mutedReason":null,"typeProfile":null,"isAnon":null,"uidR":null,"uidA":null,"anonIsin":true,"anonDefault":null,"displayname":"\\u05E8\\u05D0\\u05D5\\u05D1\\u05DF","groupTitleArray":["administrators"],"icon:text":"\\u05E8","joindateISO":"2025-04-10T09:11:09.234Z","lastonlineISO":"2025-07-14T15:46:54.974Z","muted":false,"banned_until":0,"banned_until_readable":"Not Banned","isLocal":true,"unreadData":{"":{},"new":{},"watched":{},"unreplied":{}},"isAdmin":true,"isGlobalMod":false,"isMod":false,"privileges":{"chat":true,"chat:privileged":true,"upload:post:image":true,"upload:post:file":true,"signature":true,"invite":true,"group:create":true,"search:content":true,"search:users":true,"search:tags":true,"view:users":true,"view:tags":true,"view:groups":true,"local:login":true,"ban":true,"mute":true,"view:users:info":true},"blocks":[],"timeagoCode":"he","online":true,"lastRoomId":null,"isEmailConfirmSent":false}',
    useCustomCSS: undefined,
    customCSS: '',
    useCustomHTML: undefined,
    customHTML: '',
    maintenanceHeader: 0,
    defaultLang: 'he',
    userLang: 'he',
    languageDirection: 'rtl',
    template: { name: 'recent', recent: true },
    metaTags: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object]
    ],
    linkTags: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    scripts: [],
    useCustomJS: undefined,
    customJS: '',
    isSpider: false,
    bootswatchSkinOptions: { default: [Array], custom: [], light: [Array], dark: [Array] }
  },
  templateData: {
    title: 'NodeBB',
    'title:url': '',
    description: '',
    'cache-buster': 'v=0d9950f9a57',
    'brand:logo': '',
    'brand:logo:url': '',
    'brand:logo:alt': '',
    'brand:logo:display': 'hide',
    allowRegistration: true,
    searchEnabled: true,
    postQueueEnabled: false,
    registrationQueueEnabled: false,
    config: {
      relative_path: '',
      upload_url: '/assets/uploads',
      asset_base_url: '/assets',
      assetBaseUrl: '/assets',
      siteTitle: 'NodeBB',
      browserTitle: 'NodeBB',
      description: '',
      keywords: '',
      'brand:logo': '',
      titleLayout: '&#123;pageTitle&#125; | &#123;browserTitle&#125;',
      showSiteTitle: true,
      maintenanceMode: false,
      postQueue: 0,
      minimumTitleLength: 3,
      maximumTitleLength: 255,
      minimumPostLength: 8,
      maximumPostLength: 32767,
      minimumTagsPerTopic: 0,
      maximumTagsPerTopic: 5,
      minimumTagLength: 3,
      maximumTagLength: 15,
      undoTimeout: 10000,
      useOutgoingLinksPage: false,
      outgoingLinksWhitelist: undefined,
      allowGuestHandles: false,
      allowTopicsThumbnail: true,
      usePagination: false,
      disableChat: false,
      disableChatMessageEditing: false,
      maximumChatMessageLength: 1000,
      socketioTransports: [Array],
      socketioOrigins: 'http://localhost:*',
      websocketAddress: '',
      maxReconnectionAttempts: 5,
      reconnectionDelay: 1500,
      topicsPerPage: 20,
      postsPerPage: 20,
      maximumFileSize: 2048,
      'theme:id': 'nodebb-theme-harmony',
      'theme:src': '',
      defaultLang: 'he',
      userLang: 'he',
      loggedIn: true,
      uid: 1,
      'cache-buster': 'v=0d9950f9a57',
      topicPostSort: 'oldest_to_newest',
      categoryTopicSort: 'recently_replied',
      csrf_token: '09ccdb72fa94be151d2e96bcebc93d67ee697645d6e3aba0dfee30df7442957a636b99824700705895e36334b0707efffffc3f08513b29195b0d5e25594adfcc',
      searchEnabled: true,
      searchDefaultInQuick: 'titles',
      bootswatchSkin: '',
      'composer:showHelpTab': true,
      enablePostHistory: true,
      timeagoCutoff: 30,
      timeagoCodes: [Array],
      cookies: [Object],
      thumbs: [Object],
      emailPrompt: 0,
      useragent: [Object],
      fontawesome: [Object],
      activitypub: [Object],
      acpLang: 'he',
      openOutgoingLinksInNewTab: false,
      topicSearchEnabled: false,
      disableCustomUserSkins: false,
      defaultBootswatchSkin: '',
      'composer-default': {},
      theme: [Object],
      openDraftsOnPageLoad: false,
      markdown: [Object],
      emojiCustomFirst: false,
      '2factor': [Object]
    },
    relative_path: '',
    bodyClass: 'page-recent template-recent page-status-200 theme-harmony user-loggedin',
    widgets: { 'sidebar-footer': [Array] },
    configJSON: '{"relative_path":"","upload_url":"/assets/uploads","asset_base_url":"/assets","assetBaseUrl":"/assets","siteTitle":"NodeBB","browserTitle":"NodeBB","description":"","keywords":"","brand:logo":"","titleLayout":"&#123;pageTitle&#125; | &#123;browserTitle&#125;","showSiteTitle":true,"maintenanceMode":false,"postQueue":0,"minimumTitleLength":3,"maximumTitleLength":255,"minimumPostLength":8,"maximumPostLength":32767,"minimumTagsPerTopic":0,"maximumTagsPerTopic":5,"minimumTagLength":3,"maximumTagLength":15,"undoTimeout":10000,"useOutgoingLinksPage":false,"allowGuestHandles":false,"allowTopicsThumbnail":true,"usePagination":false,"disableChat":false,"disableChatMessageEditing":false,"maximumChatMessageLength":1000,"socketioTransports":["polling","websocket"],"socketioOrigins":"http://localhost:*","websocketAddress":"","maxReconnectionAttempts":5,"reconnectionDelay":1500,"topicsPerPage":20,"postsPerPage":20,"maximumFileSize":2048,"theme:id":"nodebb-theme-harmony","theme:src":"","defaultLang":"he","userLang":"he","loggedIn":true,"uid":1,"cache-buster":"v=0d9950f9a57","topicPostSort":"oldest_to_newest","categoryTopicSort":"recently_replied","csrf_token":"09ccdb72fa94be151d2e96bcebc93d67ee697645d6e3aba0dfee30df7442957a636b99824700705895e36334b0707efffffc3f08513b29195b0d5e25594adfcc","searchEnabled":true,"searchDefaultInQuick":"titles","bootswatchSkin":"","composer:showHelpTab":true,"enablePostHistory":true,"timeagoCutoff":30,"timeagoCodes":["af","am","ar","az-short","az","be","bg","bs","ca","cs","cy","da","de-short","de","dv","el","en-short","en","es-short","es","et","eu","fa-short","fa","fi","fr-short","fr","gl","he","hr","hu","hy","id","is","it-short","it","ja","jv","ko","ky","lt","lv","mk","nl","no","pl","pt-br-short","pt-br","pt-short","pt","ro","rs","ru","rw","si","sk","sl","sq","sr","sv","th","tr-short","tr","uk","ur","uz","vi","zh-CN","zh-TW"],"cookies":{"enabled":false,"message":"&lsqb;&lsqb;global:cookies.message&rsqb;&rsqb;","dismiss":"&lsqb;&lsqb;global:cookies.accept&rsqb;&rsqb;","link":"&lsqb;&lsqb;global:cookies.learn-more&rsqb;&rsqb;","link_url":"https:&#x2F;&#x2F;www.cookiesandyou.com"},"thumbs":{"size":512},"emailPrompt":0,"useragent":{"isSafari":false},"fontawesome":{"pro":false,"styles":["solid","brands","regular"],"version":"6.7.2"},"activitypub":{"probe":1},"acpLang":"he","openOutgoingLinksInNewTab":false,"topicSearchEnabled":false,"disableCustomUserSkins":false,"defaultBootswatchSkin":"","composer-default":{},"theme":{"enableQuickReply":true,"enableBreadcrumbs":true,"centerHeaderElements":false,"mobileTopicTeasers":false,"stickyToolbar":true,"topicSidebarTools":true,"topMobilebar":false,"autohideBottombar":true,"openSidebars":false,"chatModals":false},"openDraftsOnPageLoad":false,"markdown":{"highlight":1,"highlightLinesLanguageList":"[]","hljsLanguages":["common"],"theme":"default.css","defaultHighlightLanguage":"","externalMark":false},"emojiCustomFirst":false,"2factor":{"hasKey":false}}',
    bootswatchSkin: '',
    browserTitle: 'נושאים אחרונים | NodeBB',
    navigation: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object]
    ],
    unreadCount: {
      topic: 0,
      newTopic: 0,
      watchedTopic: 0,
      unrepliedTopic: 0,
      mobileUnread: 0,
      unreadUrl: '/unread',
      chat: 0,
      notification: 0,
      flags: 0
    },
    isAdmin: true,
    isGlobalMod: false,
    showModMenu: true,
    canChat: true,
    user: {
      uid: 1,
      username: 'ראובן',
      userslug: 'ראובן',
      email: 'R.GOLDMAN7983@gmail.com',
      'email:confirmed': true,
      joindate: 1744276269234,
      lastonline: 1752508014974,
      picture: '',
      'icon:bgColor': '#2196f3',
      fullname: null,
      birthday: null,
      aboutme: null,
      signature: null,
      uploadedpicture: null,
      profileviews: 1,
      reputation: 12,
      postcount: 35,
      topiccount: 11,
      lastposttime: 1751977471449,
      banned: false,
      'banned:expire': 0,
      status: 'online',
      flags: null,
      followerCount: 0,
      followingCount: 0,
      'cover:url': null,
      'cover:position': null,
      groupTitle: '["administrators"]',
      mutedUntil: 0,
      mutedReason: null,
      typeProfile: null,
      isAnon: null,
      uidR: null,
      uidA: null,
      anonIsin: true,
      anonDefault: null,
      displayname: 'ראובן',
      groupTitleArray: [Array],
      'icon:text': 'ר',
      joindateISO: '2025-04-10T09:11:09.234Z',
      lastonlineISO: '2025-07-14T15:46:54.974Z',
      muted: false,
      banned_until: 0,
      banned_until_readable: 'Not Banned',
      isLocal: true,
      unreadData: [Object],
      isAdmin: true,
      isGlobalMod: false,
      isMod: false,
      privileges: [Object],
      blocks: [],
      timeagoCode: 'he',
      online: true,
      lastRoomId: null,
      isEmailConfirmSent: false
    },
    userJSON: '{"uid":1,"username":"\\u05E8\\u05D0\\u05D5\\u05D1\\u05DF","userslug":"\\u05E8\\u05D0\\u05D5\\u05D1\\u05DF","email":"R.GOLDMAN7983@gmail.com","email:confirmed":true,"joindate":1744276269234,"lastonline":1752508014974,"picture":"","icon:bgColor":"#2196f3","fullname":null,"birthday":null,"aboutme":null,"signature":null,"uploadedpicture":null,"profileviews":1,"reputation":12,"postcount":35,"topiccount":11,"lastposttime":1751977471449,"banned":false,"banned:expire":0,"status":"online","flags":null,"followerCount":0,"followingCount":0,"cover:url":null,"cover:position":null,"groupTitle":"[\\\\"administrators\\\\"]","mutedUntil":0,"mutedReason":null,"typeProfile":null,"isAnon":null,"uidR":null,"uidA":null,"anonIsin":true,"anonDefault":null,"displayname":"\\u05E8\\u05D0\\u05D5\\u05D1\\u05DF","groupTitleArray":["administrators"],"icon:text":"\\u05E8","joindateISO":"2025-04-10T09:11:09.234Z","lastonlineISO":"2025-07-14T15:46:54.974Z","muted":false,"banned_until":0,"banned_until_readable":"Not Banned","isLocal":true,"unreadData":{"":{},"new":{},"watched":{},"unreplied":{}},"isAdmin":true,"isGlobalMod":false,"isMod":false,"privileges":{"chat":true,"chat:privileged":true,"upload:post:image":true,"upload:post:file":true,"signature":true,"invite":true,"group:create":true,"search:content":true,"search:users":true,"search:tags":true,"view:users":true,"view:tags":true,"view:groups":true,"local:login":true,"ban":true,"mute":true,"view:users:info":true},"blocks":[],"timeagoCode":"he","online":true,"lastRoomId":null,"isEmailConfirmSent":false}',
    useCustomCSS: undefined,
    customCSS: '',
    useCustomHTML: undefined,
    customHTML: '',
    maintenanceHeader: 0,
    defaultLang: 'he',
    userLang: 'he',
    languageDirection: 'rtl',
    template: { name: 'recent', recent: true },
    metaTags: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object]
    ],
    linkTags: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object]
    ],
    scripts: [],
    useCustomJS: undefined,
    customJS: '',
    isSpider: false,
    bootswatchSkinOptions: { default: [Array], custom: [], light: [Array], dark: [Array] }
  },
  data: {
    nextStart: 20,
    topicCount: 12,
    topics: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    tids: [
       3, 14, 9, 13, 12,
      11, 10, 6,  4,  5,
       2,  1
    ],
    title: '[[pages:recent]]',
    breadcrumbs: [ [Object], [Object] ],
    canPost: true,
    showSelect: true,
    showTopicTools: true,
    allCategoriesUrl: 'recent',
    selectedCategory: null,
    selectedCids: [],
    selectedTag: null,
    selectedTags: [],
    'feeds:disableRSS': 0,
    rssFeedUrl: '/recent.rss?uid=1&token=c0288bb9-d82b-4a4d-bacc-e2d18eedcc53',
    filters: [ [Object], [Object], [Object], [Object] ],
    selectedFilter: {
      name: '[[unread:all-topics]]',
      url: 'recent',
      selected: true,
      filter: '',
      icon: 'fa-book'
    },
    terms: [ [Object], [Object], [Object], [Object] ],
    selectedTerm: {
      name: '[[recent:alltime]]',
      url: 'recent',
      selected: true,
      term: 'alltime'
    },
    pagination: {
      prev: [Object],
      next: [Object],
      first: [Object],
      last: [Object],
      rel: [],
      pages: [],
      currentPage: 1,
      pageCount: 1
    },
    loggedIn: true,
    loggedInUser: {
      uid: 1,
      username: 'ראובן',
      userslug: 'ראובן',
      email: 'R.GOLDMAN7983@gmail.com',
      'email:confirmed': 1,
      joindate: 1744276269234,
      lastonline: 1752508014974,
      picture: '',
      'icon:bgColor': '#2196f3',
      fullname: null,
      birthday: null,
      aboutme: null,
      signature: null,
      uploadedpicture: null,
      profileviews: 1,
      reputation: 12,
      postcount: 35,
      topiccount: 11,
      lastposttime: 1751977471449,
      banned: false,
      'banned:expire': 0,
      status: 'online',
      flags: null,
      followerCount: 0,
      followingCount: 0,
      'cover:url': null,
      'cover:position': null,
      groupTitle: '["administrators"]',
      mutedUntil: 0,
      mutedReason: null,
      typeProfile: null,
      isAnon: null,
      uidR: null,
      uidA: null,
      anonIsin: true,
      anonDefault: null,
      displayname: 'ראובן',
      groupTitleArray: [Array],
      'icon:text': 'ר',
      joindateISO: '2025-04-10T09:11:09.234Z',
      lastonlineISO: '2025-07-14T15:46:54.974Z',
      muted: false,
      banned_until: 0,
      banned_until_readable: 'Not Banned',
      isLocal: true
    },
    relative_path: '',
    template: { name: 'recent', recent: true },
    url: '/recent',
    bodyClass: 'page-recent template-recent page-status-200 theme-harmony user-loggedin',
    _header: { tags: [Object] },
    widgets: { 'sidebar-footer': [Array] },
    _locals: [Object: null prototype] {
      useragent: [Object],
      renderHeader: true,
      isAPI: false,
      config: [Object],
      linkTags: [Array],
      template: 'recent'
    }
  },
  caller: {
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'GET',
      body: undefined,
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/user/%D7%A4%D7%A8%D7%95%D7%A4%D7%99%D7%9C-%D7%90%D7%99%D7%A9%D7%99/settings',
      path: '/user/%D7%A4%D7%A8%D7%95%D7%A4%D7%99%D7%9C-%D7%90%D7%99%D7%A9%D7%99/settings',
      baseUrl: '',
      originalUrl: '/recent',
      headers: [Object]
    }
  }
}


=== filter:middleware.render

data: {
  req: <ref *1> IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: undefined,
      readable: undefined
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 1315596
    },
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [ServerResponse],
      Symbol(async_id_symbol): 3581,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): null,
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      'localhost:4567',
      'Connection',
      'keep-alive',
      'Cache-Control',
      'max-age=0',
      'sec-ch-ua-platform',
      '"Windows"',
      'User-Agent',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      'Accept',
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-ch-ua',
      '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
      'Upgrade-Insecure-Requests',
      '1',
      'sec-ch-ua-mobile',
      '?0',
      'Sec-Fetch-Site',
      'same-origin',
      'Sec-Fetch-Mode',
      'navigate',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:4567/admin/advanced/logs',
      'Accept-Encoding',
      'gzip, deflate, br, zstd',
      'Accept-Language',
      'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
      'Cookie',
      'express.sid=s%3AmPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5.kGC%2B%2FZOijacyOV3gL%2FpkXTZeW0%2BHYiVLBtRb%2BZe%2BeCk',
      'If-None-Match',
      'W/"48857-v4+Xjzp8j7cxzrtlXd22/j8B6Z4"'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/admin/advanced/logs',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [ServerResponse],
      Symbol(async_id_symbol): 3581,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): null,
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    _consuming: false,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/admin/advanced/logs',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/admin/advanced/logs',
      path: '/admin/advanced/logs',
      href: '/admin/advanced/logs',
      _raw: '/admin/advanced/logs'
    },
    params: {},
    query: {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype],
      writeHead: [Function: writeHead],
      end: [Function: end],
      render: [AsyncFunction: renderOverride],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Socket],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 16384,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    flash: [Function: _flash],
    body: undefined,
    secret: '62363102-7510-4f6f-b5ab-6e09c51a10a5',
    cookies: {},
    signedCookies: [Object: null prototype] {
      'express.sid': 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5'
    },
    useragent: {
      isYaBrowser: false,
      isAuthoritative: true,
      isMobile: false,
      isMobileNative: false,
      isTablet: false,
      isiPad: false,
      isiPod: false,
      isiPhone: false,
      isiPhoneNative: false,
      isAndroid: false,
      isAndroidNative: false,
      isBlackberry: false,
      isOpera: false,
      isIE: false,
      isEdge: false,
      isIECompatibilityMode: false,
      isSafari: false,
      isFirefox: false,
      isWebkit: false,
      isChrome: true,
      isKonqueror: false,
      isOmniWeb: false,
      isSeaMonkey: false,
      isFlock: false,
      isAmaya: false,
      isPhantomJS: false,
      isEpiphany: false,
      isDesktop: true,
      isWindows: true,
      isLinux: false,
      isLinux64: false,
      isMac: false,
      isChromeOS: false,
      isBada: false,
      isSamsung: false,
      isRaspberry: false,
      isBot: false,
      isCurl: false,
      isAndroidTablet: false,
      isWinJs: false,
      isKindleFire: false,
      isSilk: false,
      isCaptive: false,
      isSmartTV: false,
      isUC: false,
      isFacebook: false,
      isAlamoFire: false,
      isElectron: false,
      silkAccelerated: false,
      browser: 'Chrome',
      version: '138.0.0.0',
      os: 'Windows 10.0',
      platform: 'Microsoft Windows',
      geoIp: {},
      source: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      isWechat: false
    },
    isSpider: [Function: bound isSpider],
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/admin/advanced/logs',
      path: '/admin/advanced/logs',
      href: '/admin/advanced/logs',
      _raw: '/admin/advanced/logs'
    },
    sessionStore: MongoStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      crypto: null,
      transformFunctions: [Object],
      clientP: [Promise],
      options: [Object],
      collectionP: [Promise],
      generate: [Function (anonymous)],
      Symbol(shapeMode): false,
      Symbol(kCapture): false
    },
    sessionID: 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5',
    session: Session {
      cookie: [Object],
      csrfToken: '09ccdb72fa94be151d2e96bcebc93d67ee697645d6e3aba0dfee30df7442957a636b99824700705895e36334b0707efffffc3f08513b29195b0d5e25594adfcc',
      flash: {},
      passport: [Object],
      meta: [Object],
      tids_viewed: [Object],
      uids_viewed: [Object]
    },
    logIn: [Function (anonymous)],
    login: [Function (anonymous)],
    logOut: [Function (anonymous)],
    logout: [Function (anonymous)],
    isAuthenticated: [Function (anonymous)],
    isUnauthenticated: [Function (anonymous)],
    _sessionManager: SessionManager {
      _key: 'passport',
      _serializeUser: [Function: bound ]
    },
    _passport: { instance: [Authenticator] },
    user: { uid: 1 },
    loggedIn: true,
    uid: 1,
    route: Route {
      path: '/admin/advanced/logs',
      stack: [Array],
      methods: [Object]
    },
    csrfToken: [Function (anonymous)],
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kHeaders): {
      host: 'localhost:4567',
      connection: 'keep-alive',
      'cache-control': 'max-age=0',
      'sec-ch-ua-platform': '"Windows"',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
      'upgrade-insecure-requests': '1',
      'sec-ch-ua-mobile': '?0',
      'sec-fetch-site': 'same-origin',
      'sec-fetch-mode': 'navigate',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:4567/admin/advanced/logs',
      'accept-encoding': 'gzip, deflate, br, zstd',
      'accept-language': 'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
      cookie: 'express.sid=s%3AmPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5.kGC%2B%2FZOijacyOV3gL%2FpkXTZeW0%2BHYiVLBtRb%2BZe%2BeCk',
      'if-none-match': 'W/"48857-v4+Xjzp8j7cxzrtlXd22/j8B6Z4"'
    },
    Symbol(kHeadersCount): 34,
    Symbol(kTrailers): null,
    Symbol(kTrailersCount): 0
  },
  res: <ref *2> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: <ref *1> IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/admin/advanced/logs',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/admin/advanced/logs',
      _parsedUrl: [Url],
      params: {},
      query: {},
      res: [Circular *2],
      flash: [Function: _flash],
      body: undefined,
      secret: '62363102-7510-4f6f-b5ab-6e09c51a10a5',
      cookies: {},
      signedCookies: [Object: null prototype],
      useragent: [Object],
      isSpider: [Function: bound isSpider],
      _parsedOriginalUrl: [Url],
      sessionStore: [MongoStore],
      sessionID: 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5',
      session: [Session],
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _sessionManager: [SessionManager],
      _passport: [Object],
      user: [Object],
      loggedIn: true,
      uid: 1,
      route: [Route],
      csrfToken: [Function (anonymous)],
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kHeaders): [Object],
      Symbol(kHeadersCount): 34,
      Symbol(kTrailers): null,
      Symbol(kTrailersCount): 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {
      useragent: [Object],
      renderAdminHeader: true,
      config: [Object]
    },
    writeHead: [Function: writeHead],
    end: [Function: end],
    render: [AsyncFunction: renderOverride],
    Symbol(shapeMode): false,
    Symbol(kCapture): false,
    Symbol(kBytesWritten): 0,
    Symbol(kNeedDrain): false,
    Symbol(corked): 0,
    Symbol(kChunkedBuffer): [],
    Symbol(kChunkedLength): 0,
    Symbol(kSocket): Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [Circular *2],
      Symbol(async_id_symbol): 3581,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): null,
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    Symbol(kOutHeaders): [Object: null prototype] {
      'cross-origin-opener-policy': [Array],
      'cross-origin-resource-policy': [Array],
      'origin-agent-cluster': [Array],
      'referrer-policy': [Array],
      'strict-transport-security': [Array],
      'x-content-type-options': [Array],
      'x-dns-prefetch-control': [Array],
      'x-download-options': [Array],
      'x-frame-options': [Array],
      'x-permitted-cross-domain-policies': [Array],
      'x-xss-protection': [Array],
      'x-powered-by': [Array],
      'content-security-policy': [Array],
      'cache-control': [Array]
    },
    Symbol(errored): null,
    Symbol(kHighWaterMark): 16384,
    Symbol(kRejectNonStandardBodyWrites): false,
    Symbol(kUniqueHeaders): null
  },
  templateData: {
    data: '',
    loggedIn: true,
    loggedInUser: {
      uid: 1,
      username: 'ראובן',
      userslug: 'ראובן',
      email: 'R.GOLDMAN7983@gmail.com',
      'email:confirmed': 1,
      joindate: 1744276269234,
      lastonline: 1752567551519,
      picture: '',
      'icon:bgColor': '#2196f3',
      fullname: null,
      birthday: null,
      aboutme: null,
      signature: null,
      uploadedpicture: null,
      profileviews: 1,
      reputation: 12,
      postcount: 35,
      topiccount: 11,
      lastposttime: 1751977471449,
      banned: false,
      'banned:expire': 0,
      status: 'online',
      flags: null,
      followerCount: 0,
      followingCount: 0,
      'cover:url': null,
      'cover:position': null,
      groupTitle: '["administrators"]',
      mutedUntil: 0,
      mutedReason: null,
      typeProfile: null,
      isAnon: null,
      uidR: null,
      uidA: null,
      anonIsin: true,
      anonDefault: null,
      displayname: 'ראובן',
      groupTitleArray: [Array],
      'icon:text': 'ר',
      joindateISO: '2025-04-10T09:11:09.234Z',
      lastonlineISO: '2025-07-15T08:19:11.519Z',
      muted: false,
      banned_until: 0,
      banned_until_readable: 'Not Banned',
      isLocal: true
    },
    relative_path: '',
    template: { name: 'admin/advanced/logs', 'admin/advanced/logs': true },
    url: '/admin/advanced/logs',
    bodyClass: 'page-admin page-admin-advanced page-admin-logs template-admin-advanced-logs page-status-200 theme-harmony user-loggedin'
  },
  caller: {
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'GET',
      body: undefined,
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/admin/advanced/logs',
      path: '/admin/advanced/logs',
      baseUrl: '',
      originalUrl: '/admin/advanced/logs',
      headers: [Object]
    }
  }
}
data: {
  req: <ref *1> IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: undefined,
      readable: undefined
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 1315596
    },
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [ServerResponse],
      timeout: 0,
      Symbol(async_id_symbol): 4582,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 102365,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6191,
        Symbol(triggerId): 6188,
        Symbol(kAsyncContextFrame): undefined
      },
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      'localhost:4567',
      'Connection',
      'keep-alive',
      'Cache-Control',
      'max-age=0',
      'sec-ch-ua-platform',
      '"Windows"',
      'User-Agent',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      'Accept',
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-ch-ua',
      '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
      'Upgrade-Insecure-Requests',
      '1',
      'sec-ch-ua-mobile',
      '?0',
      'Sec-Fetch-Site',
      'same-origin',
      'Sec-Fetch-Mode',
      'navigate',
      'Sec-Fetch-Dest',
      'empty',
      'Referer',
      'http://localhost:4567/',
      'Accept-Encoding',
      'gzip, deflate, br, zstd',
      'Accept-Language',
      'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
      'Cookie',
      'express.sid=s%3AmPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5.kGC%2B%2FZOijacyOV3gL%2FpkXTZeW0%2BHYiVLBtRb%2BZe%2BeCk',
      'If-None-Match',
      'W/"17775-Uj72wKW3DXcL3BPqsicf9OKIL6k"'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/categories',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [ServerResponse],
      timeout: 0,
      Symbol(async_id_symbol): 4582,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 102365,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6191,
        Symbol(triggerId): 6188,
        Symbol(kAsyncContextFrame): undefined
      },
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    _consuming: false,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/categories',
      path: '/categories',
      href: '/categories',
      _raw: '/categories'
    },
    params: {},
    query: [Object: null prototype] {},
    res: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *1],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype],
      writeHead: [Function: writeHead],
      end: [Function: end],
      render: [AsyncFunction: renderOverride],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Socket],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 16384,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    flash: [Function: _flash],
    body: undefined,
    secret: '62363102-7510-4f6f-b5ab-6e09c51a10a5',
    cookies: {},
    signedCookies: [Object: null prototype] {
      'express.sid': 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5'
    },
    useragent: {
      isYaBrowser: false,
      isAuthoritative: true,
      isMobile: false,
      isMobileNative: false,
      isTablet: false,
      isiPad: false,
      isiPod: false,
      isiPhone: false,
      isiPhoneNative: false,
      isAndroid: false,
      isAndroidNative: false,
      isBlackberry: false,
      isOpera: false,
      isIE: false,
      isEdge: false,
      isIECompatibilityMode: false,
      isSafari: false,
      isFirefox: false,
      isWebkit: false,
      isChrome: true,
      isKonqueror: false,
      isOmniWeb: false,
      isSeaMonkey: false,
      isFlock: false,
      isAmaya: false,
      isPhantomJS: false,
      isEpiphany: false,
      isDesktop: true,
      isWindows: true,
      isLinux: false,
      isLinux64: false,
      isMac: false,
      isChromeOS: false,
      isBada: false,
      isSamsung: false,
      isRaspberry: false,
      isBot: false,
      isCurl: false,
      isAndroidTablet: false,
      isWinJs: false,
      isKindleFire: false,
      isSilk: false,
      isCaptive: false,
      isSmartTV: false,
      isUC: false,
      isFacebook: false,
      isAlamoFire: false,
      isElectron: false,
      silkAccelerated: false,
      browser: 'Chrome',
      version: '138.0.0.0',
      os: 'Windows 10.0',
      platform: 'Microsoft Windows',
      geoIp: {},
      source: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      isWechat: false
    },
    isSpider: [Function: bound isSpider],
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/',
      path: '/',
      href: '/',
      _raw: '/'
    },
    sessionStore: MongoStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      crypto: null,
      transformFunctions: [Object],
      clientP: [Promise],
      options: [Object],
      collectionP: [Promise],
      generate: [Function (anonymous)],
      Symbol(shapeMode): false,
      Symbol(kCapture): false
    },
    sessionID: 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5',
    session: Session {
      cookie: [Object],
      csrfToken: '09ccdb72fa94be151d2e96bcebc93d67ee697645d6e3aba0dfee30df7442957a636b99824700705895e36334b0707efffffc3f08513b29195b0d5e25594adfcc',
      flash: {},
      passport: [Object],
      meta: [Object],
      tids_viewed: [Object],
      uids_viewed: [Object]
    },
    logIn: [Function (anonymous)],
    login: [Function (anonymous)],
    logOut: [Function (anonymous)],
    logout: [Function (anonymous)],
    isAuthenticated: [Function (anonymous)],
    isUnauthenticated: [Function (anonymous)],
    _sessionManager: SessionManager {
      _key: 'passport',
      _serializeUser: [Function: bound ]
    },
    _passport: { instance: [Authenticator] },
    user: { uid: 1 },
    loggedIn: true,
    uid: 1,
    route: Route { path: '/categories', stack: [Array], methods: [Object] },
    csrfToken: [Function (anonymous)],
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kHeaders): {
      host: 'localhost:4567',
      connection: 'keep-alive',
      'cache-control': 'max-age=0',
      'sec-ch-ua-platform': '"Windows"',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
      'upgrade-insecure-requests': '1',
      'sec-ch-ua-mobile': '?0',
      'sec-fetch-site': 'same-origin',
      'sec-fetch-mode': 'navigate',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:4567/',
      'accept-encoding': 'gzip, deflate, br, zstd',
      'accept-language': 'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
      cookie: 'express.sid=s%3AmPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5.kGC%2B%2FZOijacyOV3gL%2FpkXTZeW0%2BHYiVLBtRb%2BZe%2BeCk',
      'if-none-match': 'W/"17775-Uj72wKW3DXcL3BPqsicf9OKIL6k"'
    },
    Symbol(kHeadersCount): 34,
    Symbol(kTrailers): null,
    Symbol(kTrailersCount): 0
  },
  res: <ref *2> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: <ref *1> IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: null,
      aborted: false,
      upgrade: false,
      url: '/categories',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '',
      originalUrl: '/',
      _parsedUrl: [Url],
      params: {},
      query: [Object: null prototype] {},
      res: [Circular *2],
      flash: [Function: _flash],
      body: undefined,
      secret: '62363102-7510-4f6f-b5ab-6e09c51a10a5',
      cookies: {},
      signedCookies: [Object: null prototype],
      useragent: [Object],
      isSpider: [Function: bound isSpider],
      _parsedOriginalUrl: [Url],
      sessionStore: [MongoStore],
      sessionID: 'mPtUXohSp2XXjUYcDfQxPUs5WAUFGaV5',
      session: [Session],
      logIn: [Function (anonymous)],
      login: [Function (anonymous)],
      logOut: [Function (anonymous)],
      logout: [Function (anonymous)],
      isAuthenticated: [Function (anonymous)],
      isUnauthenticated: [Function (anonymous)],
      _sessionManager: [SessionManager],
      _passport: [Object],
      user: [Object],
      loggedIn: true,
      uid: 1,
      route: [Route],
      csrfToken: [Function (anonymous)],
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kHeaders): [Object],
      Symbol(kHeadersCount): 34,
      Symbol(kTrailers): null,
      Symbol(kTrailersCount): 0
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {
      useragent: [Object],
      renderHeader: true,
      isAPI: false,
      config: [Object],
      metaTags: [Array]
    },
    writeHead: [Function: writeHead],
    end: [Function: end],
    render: [AsyncFunction: renderOverride],
    Symbol(shapeMode): false,
    Symbol(kCapture): false,
    Symbol(kBytesWritten): 0,
    Symbol(kNeedDrain): false,
    Symbol(corked): 0,
    Symbol(kChunkedBuffer): [],
    Symbol(kChunkedLength): 0,
    Symbol(kSocket): Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [Circular *2],
      timeout: 0,
      Symbol(async_id_symbol): 4582,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 102365,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6191,
        Symbol(triggerId): 6188,
        Symbol(kAsyncContextFrame): undefined
      },
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    Symbol(kOutHeaders): [Object: null prototype] {
      'cross-origin-opener-policy': [Array],
      'cross-origin-resource-policy': [Array],
      'origin-agent-cluster': [Array],
      'referrer-policy': [Array],
      'strict-transport-security': [Array],
      'x-content-type-options': [Array],
      'x-dns-prefetch-control': [Array],
      'x-download-options': [Array],
      'x-frame-options': [Array],
      'x-permitted-cross-domain-policies': [Array],
      'x-xss-protection': [Array],
      'x-powered-by': [Array],
      'content-security-policy': [Array],
      'cache-control': [Array]
    },
    Symbol(errored): null,
    Symbol(kHighWaterMark): 16384,
    Symbol(kRejectNonStandardBodyWrites): false,
    Symbol(kUniqueHeaders): null
  },
  templateData: {
    title: '[[pages:home]]',
    selectCategoryLabel: '[[pages:categories]]',
    categories: [ [Object], [Object], [Object], [Object] ],
    pagination: {
      prev: [Object],
      next: [Object],
      first: [Object],
      last: [Object],
      rel: [],
      pages: [],
      currentPage: 1,
      pageCount: 1
    },
    loggedIn: true,
    loggedInUser: {
      uid: 1,
      username: 'ראובן',
      userslug: 'ראובן',
      email: 'R.GOLDMAN7983@gmail.com',
      'email:confirmed': 1,
      joindate: 1744276269234,
      lastonline: 1752569187201,
      picture: '',
      'icon:bgColor': '#2196f3',
      fullname: null,
      birthday: null,
      aboutme: null,
      signature: null,
      uploadedpicture: null,
      profileviews: 1,
      reputation: 12,
      postcount: 35,
      topiccount: 11,
      lastposttime: 1751977471449,
      banned: false,
      'banned:expire': 0,
      status: 'online',
      flags: null,
      followerCount: 0,
      followingCount: 0,
      'cover:url': null,
      'cover:position': null,
      groupTitle: '["administrators"]',
      mutedUntil: 0,
      mutedReason: null,
      typeProfile: null,
      isAnon: null,
      uidR: null,
      uidA: null,
      anonIsin: true,
      anonDefault: null,
      displayname: 'ראובן',
      groupTitleArray: [Array],
      'icon:text': 'ר',
      joindateISO: '2025-04-10T09:11:09.234Z',
      lastonlineISO: '2025-07-15T08:46:27.201Z',
      muted: false,
      banned_until: 0,
      banned_until_readable: 'Not Banned',
      isLocal: true
    },
    relative_path: '',
    template: { name: 'categories', categories: true },
    url: '/categories',
    bodyClass: 'page-categories template-categories page-status-200 theme-harmony user-loggedin'
  },
  caller: {
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'GET',
      body: undefined,
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/',
      path: '/',
      baseUrl: '',
      originalUrl: '/',
      headers: [Object]
    }
  }
}


רינדור של תבנית API 
async function renderSwichUser(req, res, next) {

רק: <ref *2> IncomingMessage {
  _events: {
    close: undefined,
    error: undefined,
    data: undefined,
    end: undefined,
    readable: undefined
  },
  _readableState: ReadableState {
    highWaterMark: 16384,
    buffer: [],
    bufferIndex: 0,
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    Symbol(kState): 1315596
  },
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array],
      error: [Function: socketOnError],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain],
      data: [Function: bound socketOnData],
      end: [Array],
      readable: undefined,
      timeout: [Function: socketOnTimeout],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 193997060
    },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      Symbol(kState): 17563908,
      Symbol(kBufferedValue): null,
      Symbol(kWriteCbValue): null,
      Symbol(kAfterWriteTickInfoValue): null
    },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '4:0.0.0.0:4567',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 3120,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 173950,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 3122,
        Symbol(triggerId): 3121,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '4:0.0.0.0:4567',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 3120,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 173950,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 3122,
        Symbol(triggerId): 3121,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      Symbol(resource_symbol): [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _peername: { address: '127.0.0.1', family: 'IPv4', port: 64164 },
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype],
      writeHead: [Function: writeHead],
      end: [Function: end],
      render: [AsyncFunction: renderOverride],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Circular *1],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 16384,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    timeout: 0,
    Symbol(async_id_symbol): 6784,
    Symbol(kHandle): TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      Symbol(owner_symbol): [Circular *1]
    },
    Symbol(lastWriteQueueSize): 0,
    Symbol(timeout): Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 200220,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      Symbol(refed): false,
      Symbol(kHasPrimitive): false,
      Symbol(asyncId): 6817,
      Symbol(triggerId): 6814,
      Symbol(kAsyncContextFrame): [AsyncContextFrame [Map]]
    },
    Symbol(kBuffer): null,
    Symbol(kBufferCb): null,
    Symbol(kBufferGen): null,
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kSetNoDelay): true,
    Symbol(kSetKeepAlive): false,
    Symbol(kSetKeepAliveInitialDelay): 0,
    Symbol(kBytesRead): 0,
    Symbol(kBytesWritten): 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'Host',
    'localhost:4567',
    'Connection',
    'keep-alive',
    'Pragma',
    'no-cache',
    'Cache-Control',
    'no-cache',
    'sec-ch-ua-platform',
    '"Windows"',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
    'Accept',
    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
    'sec-ch-ua',
    '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
    'Upgrade-Insecure-Requests',
    '1',
    'sec-ch-ua-mobile',
    '?0',
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'navigate',
    'Sec-Fetch-Dest',
    'empty',
    'Accept-Encoding',
    'gzip, deflate, br, zstd',
    'Accept-Language',
    'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
    'Cookie',
    'express.sid=s%3APRG66qEwEB4jMsQm3YMvKW2DoYnDP0Ah.uSX9J5IS4fNgyQspUsG471eyDcEDKNT1gVWB3bTbIlc'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/api/plugins/anon-profile/swich-user',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array],
      error: [Function: socketOnError],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain],
      data: [Function: bound socketOnData],
      end: [Array],
      readable: undefined,
      timeout: [Function: socketOnTimeout],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 193997060
    },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      Symbol(kState): 17563908,
      Symbol(kBufferedValue): null,
      Symbol(kWriteCbValue): null,
      Symbol(kAfterWriteTickInfoValue): null
    },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '4:0.0.0.0:4567',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 3120,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 173950,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 3122,
        Symbol(triggerId): 3121,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '4:0.0.0.0:4567',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 3120,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 173950,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 3122,
        Symbol(triggerId): 3121,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      Symbol(resource_symbol): [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _peername: { address: '127.0.0.1', family: 'IPv4', port: 64164 },
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype],
      writeHead: [Function: writeHead],
      end: [Function: end],
      render: [AsyncFunction: renderOverride],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(kBytesWritten): 0,
      Symbol(kNeedDrain): false,
      Symbol(corked): 0,
      Symbol(kChunkedBuffer): [],
      Symbol(kChunkedLength): 0,
      Symbol(kSocket): [Circular *1],
      Symbol(kOutHeaders): [Object: null prototype],
      Symbol(errored): null,
      Symbol(kHighWaterMark): 16384,
      Symbol(kRejectNonStandardBodyWrites): false,
      Symbol(kUniqueHeaders): null
    },
    timeout: 0,
    Symbol(async_id_symbol): 6784,
    Symbol(kHandle): TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      Symbol(owner_symbol): [Circular *1]
    },
    Symbol(lastWriteQueueSize): 0,
    Symbol(timeout): Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 200220,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      Symbol(refed): false,
      Symbol(kHasPrimitive): false,
      Symbol(asyncId): 6817,
      Symbol(triggerId): 6814,
      Symbol(kAsyncContextFrame): [AsyncContextFrame [Map]]
    },
    Symbol(kBuffer): null,
    Symbol(kBufferCb): null,
    Symbol(kBufferGen): null,
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kSetNoDelay): true,
    Symbol(kSetKeepAlive): false,
    Symbol(kSetKeepAliveInitialDelay): 0,
    Symbol(kBytesRead): 0,
    Symbol(kBytesWritten): 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/api/plugins/anon-profile/swich-user',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/api/plugins/anon-profile/swich-user',
    path: '/api/plugins/anon-profile/swich-user',
    href: '/api/plugins/anon-profile/swich-user',
    _raw: '/api/plugins/anon-profile/swich-user'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] { useragent: [Object], isAPI: true },
    writeHead: [Function: writeHead],
    end: [Function: end],
    render: [AsyncFunction: renderOverride],
    Symbol(shapeMode): false,
    Symbol(kCapture): false,
    Symbol(kBytesWritten): 0,
    Symbol(kNeedDrain): false,
    Symbol(corked): 0,
    Symbol(kChunkedBuffer): [],
    Symbol(kChunkedLength): 0,
    Symbol(kSocket): <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [Circular *3],
      timeout: 0,
      Symbol(async_id_symbol): 6784,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 200220,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6817,
        Symbol(triggerId): 6814,
        Symbol(kAsyncContextFrame): [AsyncContextFrame [Map]]
      },
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    Symbol(kOutHeaders): [Object: null prototype] {
      'cross-origin-opener-policy': [Array],
      'cross-origin-resource-policy': [Array],
      'origin-agent-cluster': [Array],
      'referrer-policy': [Array],
      'strict-transport-security': [Array],
      'x-content-type-options': [Array],
      'x-dns-prefetch-control': [Array],
      'x-download-options': [Array],
      'x-frame-options': [Array],
      'x-permitted-cross-domain-policies': [Array],
      'x-xss-protection': [Array],
      'x-powered-by': [Array],
      'content-security-policy': [Array],
      'x-upstream-hostname': [Array]
    },
    Symbol(errored): null,
    Symbol(kHighWaterMark): 16384,
    Symbol(kRejectNonStandardBodyWrites): false,
    Symbol(kUniqueHeaders): null
  },
  flash: [Function: _flash],
  body: undefined,
  secret: '62363102-7510-4f6f-b5ab-6e09c51a10a5',
  cookies: {},
  signedCookies: [Object: null prototype] {
    'express.sid': 'PRG66qEwEB4jMsQm3YMvKW2DoYnDP0Ah'
  },
  useragent: {
    isYaBrowser: false,
    isAuthoritative: true,
    isMobile: false,
    isMobileNative: false,
    isTablet: false,
    isiPad: false,
    isiPod: false,
    isiPhone: false,
    isiPhoneNative: false,
    isAndroid: false,
    isAndroidNative: false,
    isBlackberry: false,
    isOpera: false,
    isIE: false,
    isEdge: false,
    isIECompatibilityMode: false,
    isSafari: false,
    isFirefox: false,
    isWebkit: false,
    isChrome: true,
    isKonqueror: false,
    isOmniWeb: false,
    isSeaMonkey: false,
    isFlock: false,
    isAmaya: false,
    isPhantomJS: false,
    isEpiphany: false,
    isDesktop: true,
    isWindows: true,
    isLinux: false,
    isLinux64: false,
    isMac: false,
    isChromeOS: false,
    isBada: false,
    isSamsung: false,
    isRaspberry: false,
    isBot: false,
    isCurl: false,
    isAndroidTablet: false,
    isWinJs: false,
    isKindleFire: false,
    isSilk: false,
    isCaptive: false,
    isSmartTV: false,
    isUC: false,
    isFacebook: false,
    isAlamoFire: false,
    isElectron: false,
    silkAccelerated: false,
    browser: 'Chrome',
    version: '138.0.0.0',
    os: 'Windows 10.0',
    platform: 'Microsoft Windows',
    geoIp: {},
    source: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
    isWechat: false
  },
  isSpider: [Function: bound isSpider],
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/api/plugins/anon-profile/swich-user',
    path: '/api/plugins/anon-profile/swich-user',
    href: '/api/plugins/anon-profile/swich-user',
    _raw: '/api/plugins/anon-profile/swich-user'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 1209600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      clientPromise: [Promise]
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    Symbol(shapeMode): false,
    Symbol(kCapture): false
  },
  sessionID: 'PRG66qEwEB4jMsQm3YMvKW2DoYnDP0Ah',
  session: Session {
    cookie: {
      path: '/',
      _expires: 2025-07-28T17:30:30.871Z,
      originalMaxAge: 1209600000,
      httpOnly: true,
      sameSite: 'Lax'
    },
    csrfToken: 'a066e609e86a80e99bf57fef143eb1937e1a1935b83c33d734f1efc51798c6318628ad73bde1fe3ae3a2633fcd68cb8c8acc955738647b069cb0cefadade072a',
    flash: {},
    passport: { user: 43 },
    meta: {
      ip: '127.0.0.1',
      uuid: '5d51f375-4a5f-4860-944b-100397b54522',
      datetime: 1752514230868,
      platform: 'Microsoft Windows',
      browser: 'Chrome',
      version: '138.0.0.0'
    }
  },
  logIn: [Function (anonymous)],
  login: [Function (anonymous)],
  logOut: [Function (anonymous)],
  logout: [Function (anonymous)],
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _sessionManager: SessionManager {
    _key: 'passport',
    _serializeUser: [Function: bound ]
  },
  _passport: {
    instance: Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Array],
      _deserializers: [Array],
      _infoTransformers: [],
      _framework: [Object],
      _sm: [SessionManager],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Function],
      strategies: [Object],
      _userProperty: 'user'
    }
  },
  user: { uid: 43 },
  loggedIn: true,
  uid: 43,
  route: Route {
    path: '/api/plugins/anon-profile/swich-user',
    stack: [ [Layer] ],
    methods: { get: true }
  },
  Symbol(shapeMode): true,
  Symbol(kCapture): false,
  Symbol(kHeaders): {
    host: 'localhost:4567',
    connection: 'keep-alive',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'sec-ch-ua-platform': '"Windows"',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
    'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
    'upgrade-insecure-requests': '1',
    'sec-ch-ua-mobile': '?0',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-dest': 'empty',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
    cookie: 'express.sid=s%3APRG66qEwEB4jMsQm3YMvKW2DoYnDP0Ah.uSX9J5IS4fNgyQspUsG471eyDcEDKNT1gVWB3bTbIlc'
  },
  Symbol(kHeadersCount): 32,
  Symbol(kTrailers): null,
  Symbol(kTrailersCount): 0
}
רס: <ref *1> ServerResponse {
  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  destroyed: false,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  maxRequestsOnConnectionReached: false,
  _defaultKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  strictContentLength: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  _closed: false,
  _header: null,
  _keepAliveTimeout: 5000,
  _onPendingData: [Function: bound updateOutgoingData],
  req: IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: undefined,
      readable: undefined
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 1315596
    },
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [Circular *1],
      timeout: 0,
      Symbol(async_id_symbol): 6784,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 200220,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6817,
        Symbol(triggerId): 6814,
        Symbol(kAsyncContextFrame): [AsyncContextFrame [Map]]
      },
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      'localhost:4567',
      'Connection',
      'keep-alive',
      'Pragma',
      'no-cache',
      'Cache-Control',
      'no-cache',
      'sec-ch-ua-platform',
      '"Windows"',
      'User-Agent',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      'Accept',
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-ch-ua',
      '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
      'Upgrade-Insecure-Requests',
      '1',
      'sec-ch-ua-mobile',
      '?0',
      'Sec-Fetch-Site',
      'same-origin',
      'Sec-Fetch-Mode',
      'navigate',
      'Sec-Fetch-Dest',
      'empty',
      'Accept-Encoding',
      'gzip, deflate, br, zstd',
      'Accept-Language',
      'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
      'Cookie',
      'express.sid=s%3APRG66qEwEB4jMsQm3YMvKW2DoYnDP0Ah.uSX9J5IS4fNgyQspUsG471eyDcEDKNT1gVWB3bTbIlc'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/api/plugins/anon-profile/swich-user',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _peername: [Object],
      _httpMessage: [Circular *1],
      timeout: 0,
      Symbol(async_id_symbol): 6784,
      Symbol(kHandle): [TCP],
      Symbol(lastWriteQueueSize): 0,
      Symbol(timeout): Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 200220,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 6817,
        Symbol(triggerId): 6814,
        Symbol(kAsyncContextFrame): [AsyncContextFrame [Map]]
      },
      Symbol(kBuffer): null,
      Symbol(kBufferCb): null,
      Symbol(kBufferGen): null,
      Symbol(shapeMode): true,
      Symbol(kCapture): false,
      Symbol(kSetNoDelay): true,
      Symbol(kSetKeepAlive): false,
      Symbol(kSetKeepAliveInitialDelay): 0,
      Symbol(kBytesRead): 0,
      Symbol(kBytesWritten): 0
    },
    _consuming: false,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/api/plugins/anon-profile/swich-user',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/api/plugins/anon-profile/swich-user',
      path: '/api/plugins/anon-profile/swich-user',
      href: '/api/plugins/anon-profile/swich-user',
      _raw: '/api/plugins/anon-profile/swich-user'
    },
    params: {},
    query: {},
    res: [Circular *1],
    flash: [Function: _flash],
    body: undefined,
    secret: '62363102-7510-4f6f-b5ab-6e09c51a10a5',
    cookies: {},
    signedCookies: [Object: null prototype] {
      'express.sid': 'PRG66qEwEB4jMsQm3YMvKW2DoYnDP0Ah'
    },
    useragent: {
      isYaBrowser: false,
      isAuthoritative: true,
      isMobile: false,
      isMobileNative: false,
      isTablet: false,
      isiPad: false,
      isiPod: false,
      isiPhone: false,
      isiPhoneNative: false,
      isAndroid: false,
      isAndroidNative: false,
      isBlackberry: false,
      isOpera: false,
      isIE: false,
      isEdge: false,
      isIECompatibilityMode: false,
      isSafari: false,
      isFirefox: false,
      isWebkit: false,
      isChrome: true,
      isKonqueror: false,
      isOmniWeb: false,
      isSeaMonkey: false,
      isFlock: false,
      isAmaya: false,
      isPhantomJS: false,
      isEpiphany: false,
      isDesktop: true,
      isWindows: true,
      isLinux: false,
      isLinux64: false,
      isMac: false,
      isChromeOS: false,
      isBada: false,
      isSamsung: false,
      isRaspberry: false,
      isBot: false,
      isCurl: false,
      isAndroidTablet: false,
      isWinJs: false,
      isKindleFire: false,
      isSilk: false,
      isCaptive: false,
      isSmartTV: false,
      isUC: false,
      isFacebook: false,
      isAlamoFire: false,
      isElectron: false,
      silkAccelerated: false,
      browser: 'Chrome',
      version: '138.0.0.0',
      os: 'Windows 10.0',
      platform: 'Microsoft Windows',
      geoIp: {},
      source: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      isWechat: false
    },
    isSpider: [Function: bound isSpider],
    _parsedOriginalUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/api/plugins/anon-profile/swich-user',
      path: '/api/plugins/anon-profile/swich-user',
      href: '/api/plugins/anon-profile/swich-user',
      _raw: '/api/plugins/anon-profile/swich-user'
    },
    sessionStore: MongoStore {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      crypto: null,
      transformFunctions: [Object],
      clientP: [Promise],
      options: [Object],
      collectionP: [Promise],
      generate: [Function (anonymous)],
      Symbol(shapeMode): false,
      Symbol(kCapture): false
    },
    sessionID: 'PRG66qEwEB4jMsQm3YMvKW2DoYnDP0Ah',
    session: Session {
      cookie: [Object],
      csrfToken: 'a066e609e86a80e99bf57fef143eb1937e1a1935b83c33d734f1efc51798c6318628ad73bde1fe3ae3a2633fcd68cb8c8acc955738647b069cb0cefadade072a',
      flash: {},
      passport: [Object],
      meta: [Object]
    },
    logIn: [Function (anonymous)],
    login: [Function (anonymous)],
    logOut: [Function (anonymous)],
    logout: [Function (anonymous)],
    isAuthenticated: [Function (anonymous)],
    isUnauthenticated: [Function (anonymous)],
    _sessionManager: SessionManager {
      _key: 'passport',
      _serializeUser: [Function: bound ]
    },
    _passport: { instance: [Authenticator] },
    user: { uid: 43 },
    loggedIn: true,
    uid: 43,
    route: Route {
      path: '/api/plugins/anon-profile/swich-user',
      stack: [Array],
      methods: [Object]
    },
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kHeaders): {
      host: 'localhost:4567',
      connection: 'keep-alive',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'sec-ch-ua-platform': '"Windows"',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-ch-ua': '"Not)A;Brand";v="8", "Chromium";v="138", "Google Chrome";v="138"',
      'upgrade-insecure-requests': '1',
      'sec-ch-ua-mobile': '?0',
      'sec-fetch-site': 'same-origin',
      'sec-fetch-mode': 'navigate',
      'sec-fetch-dest': 'empty',
      'accept-encoding': 'gzip, deflate, br, zstd',
      'accept-language': 'he-IL,he;q=0.9,en-US;q=0.8,en;q=0.7',
      cookie: 'express.sid=s%3APRG66qEwEB4jMsQm3YMvKW2DoYnDP0Ah.uSX9J5IS4fNgyQspUsG471eyDcEDKNT1gVWB3bTbIlc'
    },
    Symbol(kHeadersCount): 32,
    Symbol(kTrailers): null,
    Symbol(kTrailersCount): 0
  },
  _sent100: false,
  _expect_continue: false,
  _maxRequestsPerSocket: 0,
  locals: [Object: null prototype] {
    useragent: {
      isYaBrowser: false,
      isAuthoritative: true,
      isMobile: false,
      isMobileNative: false,
      isTablet: false,
      isiPad: false,
      isiPod: false,
      isiPhone: false,
      isiPhoneNative: false,
      isAndroid: false,
      isAndroidNative: false,
      isBlackberry: false,
      isOpera: false,
      isIE: false,
      isEdge: false,
      isIECompatibilityMode: false,
      isSafari: false,
      isFirefox: false,
      isWebkit: false,
      isChrome: true,
      isKonqueror: false,
      isOmniWeb: false,
      isSeaMonkey: false,
      isFlock: false,
      isAmaya: false,
      isPhantomJS: false,
      isEpiphany: false,
      isDesktop: true,
      isWindows: true,
      isLinux: false,
      isLinux64: false,
      isMac: false,
      isChromeOS: false,
      isBada: false,
      isSamsung: false,
      isRaspberry: false,
      isBot: false,
      isCurl: false,
      isAndroidTablet: false,
      isWinJs: false,
      isKindleFire: false,
      isSilk: false,
      isCaptive: false,
      isSmartTV: false,
      isUC: false,
      isFacebook: false,
      isAlamoFire: false,
      isElectron: false,
      silkAccelerated: false,
      browser: 'Chrome',
      version: '138.0.0.0',
      os: 'Windows 10.0',
      platform: 'Microsoft Windows',
      geoIp: {},
      source: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
      isWechat: false
    },
    isAPI: true
  },
  writeHead: [Function: writeHead],
  end: [Function: end],
  render: [AsyncFunction: renderOverride],
  Symbol(shapeMode): false,
  Symbol(kCapture): false,
  Symbol(kBytesWritten): 0,
  Symbol(kNeedDrain): false,
  Symbol(corked): 0,
  Symbol(kChunkedBuffer): [],
  Symbol(kChunkedLength): 0,
  Symbol(kSocket): <ref *2> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array],
      error: [Function: socketOnError],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain],
      data: [Function: bound socketOnData],
      end: [Array],
      readable: undefined,
      timeout: [Function: socketOnTimeout],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      Symbol(kState): 193997060
    },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      Symbol(kState): 17563908,
      Symbol(kBufferedValue): null,
      Symbol(kWriteCbValue): null,
      Symbol(kAfterWriteTickInfoValue): null
    },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '4:0.0.0.0:4567',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 3120,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 173950,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 3122,
        Symbol(triggerId): 3121,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 3,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '4:0.0.0.0:4567',
      Symbol(IncomingMessage): [Function: IncomingMessage],
      Symbol(ServerResponse): [Function: ServerResponse],
      Symbol(shapeMode): false,
      Symbol(kCapture): false,
      Symbol(async_id_symbol): 3120,
      Symbol(kUniqueHeaders): null,
      Symbol(http.server.connections): ConnectionsList {},
      Symbol(http.server.connectionsCheckingInterval): Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 173950,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        Symbol(refed): false,
        Symbol(kHasPrimitive): false,
        Symbol(asyncId): 3122,
        Symbol(triggerId): 3121,
        Symbol(kAsyncContextFrame): undefined
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *2],
      incoming: [IncomingMessage],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      Symbol(resource_symbol): [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _peername: { address: '127.0.0.1', family: 'IPv4', port: 64164 },
    _httpMessage: [Circular *1],
    timeout: 0,
    Symbol(async_id_symbol): 6784,
    Symbol(kHandle): TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      Symbol(owner_symbol): [Circular *2]
    },
    Symbol(lastWriteQueueSize): 0,
    Symbol(timeout): Timeout {
      _idleTimeout: -1,
      _idlePrev: null,
      _idleNext: null,
      _idleStart: 200220,
      _onTimeout: null,
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: true,
      Symbol(refed): false,
      Symbol(kHasPrimitive): false,
      Symbol(asyncId): 6817,
      Symbol(triggerId): 6814,
      Symbol(kAsyncContextFrame): [AsyncContextFrame [Map]]
    },
    Symbol(kBuffer): null,
    Symbol(kBufferCb): null,
    Symbol(kBufferGen): null,
    Symbol(shapeMode): true,
    Symbol(kCapture): false,
    Symbol(kSetNoDelay): true,
    Symbol(kSetKeepAlive): false,
    Symbol(kSetKeepAliveInitialDelay): 0,
    Symbol(kBytesRead): 0,
    Symbol(kBytesWritten): 0
  },
  Symbol(kOutHeaders): [Object: null prototype] {
    'cross-origin-opener-policy': [ 'Cross-Origin-Opener-Policy', 'same-origin' ],
    'cross-origin-resource-policy': [ 'Cross-Origin-Resource-Policy', 'same-origin' ],
    'origin-agent-cluster': [ 'Origin-Agent-Cluster', '?1' ],
    'referrer-policy': [ 'Referrer-Policy', 'strict-origin-when-cross-origin' ],
    'strict-transport-security': [
      'Strict-Transport-Security',
      'max-age=15552000; includeSubDomains'
    ],
    'x-content-type-options': [ 'X-Content-Type-Options', 'nosniff' ],
    'x-dns-prefetch-control': [ 'X-DNS-Prefetch-Control', 'off' ],
    'x-download-options': [ 'X-Download-Options', 'noopen' ],
    'x-frame-options': [ 'X-Frame-Options', 'SAMEORIGIN' ],
    'x-permitted-cross-domain-policies': [ 'X-Permitted-Cross-Domain-Policies', 'none' ],
    'x-xss-protection': [ 'X-XSS-Protection', '0' ],
    'x-powered-by': [ 'X-Powered-By', 'NodeBB' ],
    'content-security-policy': [ 'Content-Security-Policy', "frame-ancestors 'self'" ],
    'x-upstream-hostname': [ 'X-Upstream-Hostname', 'DESKTOP-VJSSHDU' ]
  },
  Symbol(errored): null,
  Symbol(kHighWaterMark): 16384,
  Symbol(kRejectNonStandardBodyWrites): false,
  Symbol(kUniqueHeaders): null
}




<!-- IMPORT partials/account/header.tpl -->
  <div class="row"> <!-- כרטיס מרכזי להצגת ההודעה למשתמש -->
    <h1>כבר קיים לך פרופיל אנונימי</h1> <!-- כותרת ראשית -->
    <p>כבר יצרת בעבר משתמש אנונימי בפורום.</p> <!-- טקסט תיאורי -->
    <p>שם המשתמש האנונימי שלך הוא:</p> <!-- הכוונה להצגת השם -->
    <span class="username">{nameAnon}</span> <!-- משתנה תבנית שמוחלף בשם האנונימי -->
  </div>
<!-- IMPORT partials/account/footer.tpl -->
  <style>
    /* גופן ראשי ועדין */
    body {
      margin: 0; /* מאפס מרווחים ברירת מחדל */
      padding: 0;
      font-family: Arial, sans-serif; /* גופן קריא ופשוט */
      background-color: #f7f9fa; /* רקע בהיר ונעים */
      color: #333; /* טקסט בצבע אפור כהה לקריאות גבוהה */
      display: flex; /* מאפשר מרכזי אנכית ואופקית */
      align-items: center;
      justify-content: center;
      height: 100vh; /* גובה מלא של חלון הדפדפן */
    }

    /* מיכל כרטיס מרכזי */
    .card {
      background-color: #ffffff; /* רקע לבן לכרטיס */
      border-radius: 12px; /* פינות מעוגלות ועדינות */
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05); /* צל עדין להטמעה קלילה */
      padding: 24px; /* ריווח פנימי סביב התוכן */
      max-width: 400px; /* רוחב מרבי לכרטיס */
      width: 100%; /* תופס את כל הרוחב האפשרי עד למקסימום */
      text-align: center; /* יישור טקסט למרכז */
    }

    /* כותרת ראשית */
    .card h1 {
      margin-top: 0; /* מסיר מרווח עליון מיותר */
      font-size: 1.5rem; /* גודל גופן מודגש */
      color: #2a5d84; /* צבע ראשי רך */
    }

    /* תיאור המשנה */
    .card p {
      margin: 16px 0; /* ריווח מעל ומתחת */
      line-height: 1.5; /* גובה שורה משופר לקריאות */
    }

    /* תצוגת שם המשתמש האנונימי */
    .username {
      display: inline-block; /* מאפשר עיצוב כבלוק בשורה */
      background-color: #e1f0fb; /* רקע תכלכל עדין */
      color: #1a4f73; /* צבע טקסט תואם */
      padding: 8px 16px; /* ריווח פנימי */
      border-radius: 20px; /* פינות מעוגלות ל"בטון" ידידותי */
      font-weight: bold; /* הדגשה של שם המשתמש */
      font-size: 1rem; /* גודל גופן נוח */
    }
  </style>




          <style>
        .composer-actions-wrapper {
  /* יצירת המסגרת הכחולה העדינה באמצעות צל */
  box-shadow: 0 0 0 2px rgba(13, 110, 253, 0.4);
  
  /* פינות מעוגלות שתואמות לאלמנטים בפנים */
  border-radius: 0.375rem; /* ערך ברירת מחדל של Bootstrap */
  
  /* ריווח פנימי כדי שהאלמנטים לא ייצמדו למסגרת */
  padding: 0.1rem;
  
  /* סידור האלמנטים זה לצד זה עם רווח ביניהם */
  display: flex;
  align-items: center;
  gap: 0.1rem; /* רווח בין קבוצת הבחירה לכפתור השליחה */
  justify-content: space-between; /* ידאג שהכפתורים יהיו בצדדים נפרדים */
  width: 100%;
}

/* התאמה למצב ריחוף (hover) כדי להדגיש יותר */
.composer-actions-wrapper:hover {
    box-shadow: 0 0 0 3px rgba(13, 110, 253, 0.5);
}

/* הסרת המסגרת המקורית מהאלמנט הפנימי אם עדיין קיימת */
.composer-actions-wrapper .anon-options-container {
    border: none !important;
    padding: 0 !important;
}
        </style>




0 > 1 = data.current: unvote
1 > 0 = data.current: upvote
0 > -1 = data.current: unvote
-1 > 0 = data.current: downvote
1 > -1 = data.current: upvote
         data.current: unvote
-1 > 1 = data.current: downvote
         data.current: unvote



data: {
  pid: 100,
  uid: 1,
  owner: 46,
  current: 'unvote',
  caller: {
    uid: 1,
    req: {
      uid: 1,
      params: {},
      method: 'PUT',
      body: [Object],
      session: [Session],
      ip: '127.0.0.1',
      host: 'localhost:4567',
      protocol: 'http',
      secure: false,
      url: 'http://localhost:4567/topic/16/%D7%9E%D7%A9%D7%94-%D7%A7%D7%99%D7%91%D7%9C/3',
      path: '/topic/16/%D7%9E%D7%A9%D7%94-%D7%A7%D7%99%D7%91%D7%9C/3',
      baseUrl: '',
      originalUrl: '/api/v3/posts/100/vote',
      headers: [Object]
    }
  }
}